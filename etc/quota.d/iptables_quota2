#!/bin/sh 

. /etc/vars

if [ `/etc/quota.d/nft-check` -eq 1 ]; then
    ipt=iptables-nft
else
    ipt=iptables
fi


function append_iptables () {
    $ipt -C $1 $ext > /dev/null 2>&1
    if [ $? -eq 1 ]; then     
        $ipt -A $1 $ext > /dev/null 2>&1
    fi
}

function append_iptables_quota_reject () {
    local head="$1 $2 -j reject"
    append_iptables "$head"
}

function append_iptables_quota_conntrack () {
    local head="$1 $4 -m conntrack $3 -j $2"
    append_iptables "$head"
}

function append_iptables_quota_drop () {
    local head="$1 $2 -j DROP"
    append_iptables "$head"
}

function append_iptables_quota_limit () {
    local head="$1 $3 -m limit --limit 23/s --limit-burst 25 -j $2"
    append_iptables "$head"
}
function append_iptables_quota_time () {
    local head="$1 $3 -m time $time_active_config -j $2"
    append_iptables "$head"
}

# param chain, sq, extra
function append_iptables_quota () 
{ 
    case $2 in
        0)  
            local head="$1 $4 -m quota2 --name quota ! --quota 0 -j $3"
            append_iptables "$head"
        ;;
        2)
            local head="$1 $4 -m quota2 --name quota --no-change ! --quota 0 -j $3"
            append_iptables "$head"
        ;;
        *)
            local head="$1 $4 -m quota2 --name quota ! --quota $quota_bytes -j $3"
            append_iptables "$head"
        ;;
    esac
}
function append_iptables_counter () 
{ 
    if [ "$2" != "?" ]; then
        local $jemp="-j $2"
    fi
    local head="$1 $3 -m quota2 --name counter --grow --quota 0 $jemp"
    append_iptables "$head"
}
# param chain, sq, direction
function append_iptables_quota_ex ()
{       
    case $1 in
        in)
            local q_chain="quota_${in_chain}"
            local c_nq_q_chain="input_${nq_q_chain}"
            local c_nq_d_chain="zone_${device_chain}_input"            
        ;;
        out)
            local q_chain="quota_${out_chain}"
            local c_nq_q_chain="output_${nq_q_chain}"
            local c_nq_d_chain="zone_${device_chain}_output" 
        ;;
        fwd)
            local q_chain="quota_${fwd_chain}"
            local c_nq_q_chain="forwarding_${nq_q_chain}"
            local c_nq_d_chain="zone_${device_chain}_forward" 
        ;;
        *)
            return;
        ;;
    esac
 
    if [ ! -z $quota_time_mgr ]; then
        local mchain="$q_chain"
        local chain="${q_chain}_ext"

        $ipt -L "$chian" $ext > /dev/null 2>&1
        if [ $? -gt 0 ]; then
            $ipt -N $chain $ext > /dev/null 2>&1                   
        fi
        append_iptables_quota_time "$mchain" "$chain" " "
    else
        local chain="$q_chain" 
        local mchain="${q_chain}_ext"
        $ipt -L "$mchain" $ext > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            $ipt -F $mchain $ext > /dev/null 2>&1  
            $ipt -X $mchain $ext > /dev/null 2>&1                   
        fi    
    fi

    for dire in $3; do        
        case $dire in
            "in")
                local par="-i $wan_device_name"
            ;;
            "out")
                local par="-o $wan_device_name"
            ;;
        esac
        append_iptables_quota "$chain" "$2" "$c_nq_q_chain" "$par" 
    done 
    
    $ipt -L $c_nq_d_chain > /dev/null 2>&1
    case $? in
        1)     
            local c_nq_d_chain="ACCEPT"
        ;;
        *)
            case $1 in 
                fwd)
                    local c_nq_d_chain_dnat="$c_nq_d_chain"
                    local c_nq_d_chain="ACCEPT"
                ;;
            esac
        ;;
    esac

    case $mode in 
        limit*)
            case $1 in 
                fwd)
                    append_iptables_quota_conntrack "$c_nq_q_chain" "$c_nq_d_chain_dnat" "--ctstate DNAT" 
                ;;
            esac
            append_iptables_quota_limit "$c_nq_q_chain" "ACCEPT"  "-m conntrack --ctstate RELATED,ESTABLISHED"
            append_iptables_quota_limit "$c_nq_q_chain" "$c_nq_d_chain"             
            case $mode in
                *drop) # limit speed with drop         
                    append_iptables_quota_drop "$c_nq_q_chain"                 
                ;;                
                *) # limit speed with reject           
                    append_iptables_quota_reject "$c_nq_q_chain"              
                ;;          
            esac
        ;;
        "reject")
            append_iptables_quota_reject "$c_nq_q_chain" 
        ;;
        *) # default drop
            append_iptables_quota_drop "$c_nq_q_chain" 
        ;;
    esac

}

function quota_counter () {
    local qc_chain="quota_counter"

    append_iptables "PREROUTING -j $qc_chain -i $wan_device_name -t raw"
    append_iptables "OUTPUT -j $qc_chain -o $wan_device_name -t raw"

    $ipt -L "$qc_chain" -t raw $ext > /dev/null 2>&1
    if [ $? -gt 0 ]; then
        $ipt -F $qc_chain -t raw $ext > /dev/null 2>&1
    fi

    if [ ! -z $quota_time_mgr ]; then
        local mchain="$qc_chain"
        local chain="${qc_chain}_ext"

        $ipt -L "$chian" -t raw $ext > /dev/null 2>&1
        if [ $? -gt 0 ]; then
            $ipt -N $chain -t raw $ext > /dev/null 2>&1                   
        fi
        append_iptables_counter "$mchain" "?" "-t raw"
        append_iptables_quota_time "$mchain" "$chain" "-t raw"
    else
        local chain="$qc_chain" 
        local mchain="${qc_chain}_ext"
        $ipt -L "$mchain" -t raw $ext > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            $ipt -F $mchain -t raw $ext > /dev/null 2>&1  
            $ipt -X $mchain -t raw $ext > /dev/null 2>&1                   
        fi    
    fi

    append_iptables_quota "$chain" 1 "ACCEPT" "-t raw"
}

case $1 in 
    "resetcounter")    
        echo $quota_bytes > $bytescounter
        echo 0 > ${bytescounter}_c
        export bytes_counter=$bytescounter

    ;;
esac

for chain in $in_chain $out_chain $fwd_chain; do # clean chain before add rule
    $ipt -F "quota_${chain}" > /dev/null 2>&1    
done

quota_counter

append_iptables_quota_ex "in" 2 "in"
append_iptables_quota_ex "out" 2 "out"
append_iptables_quota_ex "fwd" 2 "in out"

if [ ! -z $bytes_counter ]; then
    [ -e $bytes_counter ] && cat $bytes_counter > /proc/net/xt_quota/quota
    [ ! -z $quota_time_mgr ] && cat ${bytescounter}_c >  /proc/net/xt_quota/counter 
fi
