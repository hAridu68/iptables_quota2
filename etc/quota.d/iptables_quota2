#!/bin/sh 

. /etc/vars

function append_iptables () {
    local head="$1"
    iptables -C $head > /dev/null 2>&1
    if [ $? -eq 1 ]; then     
        iptables -A $head > /dev/null 2>&1
    fi
}

function append_iptables_quota_reject () {
    local head="$1 $2 -j reject"
    append_iptables "$head"
}

function append_iptables_quota_drop () {
    local head="$1 $2 -j DROP"
    append_iptables "$head"
}

function append_iptables_quota_limit () {
    local head="$1 $2 -m limit --limit 27/s --limit-burst 21 -j ACCEPT"
    append_iptables "$head"
}
function append_iptables_quota_time () {
    local head="$1 $3 -m time $time_active_config -j $2"
    append_iptables "$head"
}

# param chain, sq, extra
function append_iptables_quota () 
{ 
    case $2 in
        0)  
            local head="$1 $extra_config $4 -m quota2 --name quota ! --quota 0 -j $3"
            append_iptables "$head"
        ;;
        *)
            local head="$1 $extra_config $4 -m quota2 --name quota ! --quota $quota_bytes -j $3"
            append_iptables "$head"
        ;;
    esac
}

# param chain, sq, direction
function append_iptables_quota_ex ()
{   
    if [ ! -z $qouta_time_mgr ]; then
        local mchain="$1"
        local chain="$1_ext"

        iptables -L "$chian" > /dev/null 2>&1
        if [ $? -gt 0 ]; then
            iptables -N $chain > /dev/null 2>&1                   
        fi
        append_iptables_quota_time "$mchain" "$chain" " "
    else
        local chain="$1" 
        local mchain="$1_ext"
        iptables -L "$mchain" > /dev/null 2>&1
        if [ $? -eq 0 ]; then
            iptables -F $mchain > /dev/null 2>&1  
            iptables -X $mchain > /dev/null 2>&1                   
        fi    
    fi

    for dire in $3; do        
        case $dire in
            "in")
                local par="-i $wan_device_name"
            ;;
            "out")
                local par="-o $wan_device_name"
            ;;
        esac
        append_iptables_quota "$chain" "$2" "$nq_q_chain" "$par" 
    done     
}

if ([ -z $in_q_chain ] || [ -z $out_q_chain ] || [ -z $fwd_q_chain ]); then
    exit 1
fi 

case $1 in 
    "resetcounter")    
        echo $quota_bytes > $bytescounter
        export bytes_counter=$bytescounter
    ;;
esac

case $mode in 
    "limitdrop") # limit speed with drop
        append_iptables_quota_limit "$nq_q_chain" "$extra_config"                
        append_iptables_quota_drop "$nq_q_chain" "$extra_config"                
    ;;
    "limitreject") # limit speed with reject
        append_iptables_quota_limit "$nq_q_chain" "$extra_config"                
        append_iptables_quota_reject "$nq_q_chain" "$extra_config"             
    ;;
    "reject")
        append_iptables_quota_reject "$nq_q_chain" "$extra_config"
    ;;
    *) # default drop
        append_iptables_quota_drop "$nq_q_chain" "$extra_config"
    ;;
esac

for chain in $in_q_chain $out_q_chain $fwd_q_chain; do # clean chain before add rule
    iptables -F $chain > /dev/null 2>&1    
done

append_iptables_quota_ex $in_q_chain 1 "in"
append_iptables_quota_ex $out_q_chain 0 "out"
append_iptables_quota_ex $fwd_q_chain 0 "in out"

if [ ! -z $bytes_counter ]; then
    cat $bytes_counter > /proc/net/xt_quota/quota
fi
